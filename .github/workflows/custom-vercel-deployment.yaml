name: Custom Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches-ignore:
      - master
jobs:
  Deploy-Preview:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --git-branch=${{ steps.extract_branch.outputs.branch }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --archive=tgz --token=${{ secrets.VERCEL_TOKEN }}
      - name: SLEEP #TODO: Await for the deployment to be done properly
        run: sleep 30
      - name: vercel-preview-url
        uses: zentered/vercel-preview-url@v1.1.9
        id: vercel_preview_url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel_team_id: ${{ secrets.VERCEL_ORG_ID }}
      - name: Get URL
        run: echo "https://${{ steps.vercel_preview_url.outputs.preview_url }}"
      - name: Send Hostname to Okta Trusted Domains
        run: |
          curl -X POST -H "Accept: application/json" -H "Content-Type: application/json" -H "Authorization: SSWS ${{ secrets.OKTA_API_TOKEN }}" -d '{ "name": "Vercel Preview ${{ steps.vercel_preview_url.outputs.preview_url }}", "origin": "https://${{ steps.vercel_preview_url.outputs.preview_url }}", "scopes": [{ "type": "CORS"}, {"type": "REDIRECT"}]}' "https://${{ secrets.OKTA_API_DOMAIN }}/api/v1/trustedOrigins"
      - name: Get Issue Number
        id: get_issue_number
        run: |
          PR_NUMBER=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/pulls | jq '.[0].number')
          if [ "$PR_NUMBER" != "null" ]; then 
              echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          else
              echo "Commit is not associated with a pull request"
          fi
      - name: Add Comment to PR
        uses: actions/github-script@v6.3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueNumber = ${{ steps.get_issue_number.outputs.PR_NUMBER }}
            if (issueNumber) {
              github.rest.issues.createComment({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '| Name | Status | Preview |\n|----------|----------|----------|\n| **ascd-frontend**   | ${{ steps.vercel_preview_url.outputs.deployment_state }}    | https://${{ steps.vercel_preview_url.outputs.preview_url }}     |'
              })
            }
